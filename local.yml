services:
    nginx:
        restart: unless-stopped
        image: nginx:1.27-alpine
        ports:
            - "8080:80"
        volumes:
            - ./docker/local/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        depends_on:
            -   server
        networks:
            - avax
    server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: docker/local/backend/Dockerfile
        entrypoint: /app/docker/backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        expose:
            - "8000"
#        ports:
#          - "8000:8000"
        env_file:
            - ./.envs/.local/django.env
        depends_on:
            - redis
#            - rabbitmq
        networks:
            - avax
    frontend:
        build:
            context: .
            dockerfile: docker/local/frontend/Dockerfile
        ports:
            - "3000:3000"
        volumes:
            - ./:/app
            - /app/node_modules
        env_file:
            - ./.env
        depends_on:
            - server
        networks:
            - avax
    redis:
        restart: unless-stopped
        image: redis:7.2.5-alpine
        expose:
            - "6379"
        networks:
            - avax
#    rabbitmq:
#        restart: unless-stopped
#        image: rabbitmq:3.13-management-alpine
#        expose:
#            - "5672:5672"
#        ports:
#            - "15672:15672"
#        env_file:
#            - ./.envs/.local/rabbitmq.env
#        networks:
#            - avax
    worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: docker/local/backend/Dockerfile
        entrypoint: /app/docker/backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/backend/staticfiles
        env_file:
            - ./.envs/.local/django.env
        depends_on:
#            - rabbitmq
            - redis
        networks:
            - avax
    celery-beat:
        restart: unless-stopped
        build:
            context: .
            dockerfile: docker/local/backend/Dockerfile
        entrypoint: /app/docker/backend/celery-beat-entrypoint.sh
        volumes:
            - static_volume:/app/backend/staticfiles
        env_file:
            - ./.envs/.local/django.env
        depends_on:
#            - rabbitmq
            - redis
            - worker
        networks:
            - avax
    flower:
        restart: unless-stopped
        image: mher/flower
        command: celery flower --persisten=True
        env_file:
            - ./.envs/.local/django.env
        ports:
            - "5555:5555"
        volumes:
            - flower_data:/data
        depends_on:
            - server
            - worker
#            - rabbitmq
            - redis
        networks:
            - avax
#        healthcheck:
#          test: [ "CMD", "curl", "-f", "http://0.0.0.0:5555" ]
#          interval: 30s
#          timeout: 10s
#          retries: 5

networks:
  avax:
    driver: bridge

volumes:
    static_volume:
    media_volume:
    flower_data: {}
